@import "variables.scss";

@function generateshadow($size, $color1, $color2, $inset: false) {
    $val: '';
    $prefix: if($inset, 'inset', '');
    $repeats: if($inset, 1, 4);

    @for $i from 1 through $repeats {
        $val: #{$val},
            #{$prefix} ($size * $i) ($size * $i) ($size * $i * 2) $color1,
            #{$prefix} ($size * -1 * $i) ($size * -1 * $i) ($size * $i * 2) $color2;
    }
    @return $val;
}

@mixin shadow($size: 12px, $inset: false, $prop: 'box-shadow') {
    $color1: rgba(108, 141, 154, 0.5);
    $color2: rgba(255, 255, 255, 0.8);

    transition: box-shadow 0.2s;

    #{$prop}: generateshadow($size, $color1, $color2, $inset);
}

@mixin light($enabled: false) {
    @if $enabled {
        background-image: radial-gradient(lighten($accent-color, 50%), lighten($accent-color, 20%));
    }
    @else {
        background-image: radial-gradient(darken(desaturate($accent-color, 80%), 50%), darken($accent-color, 40%));
    }
}

@mixin light-glow($enabled: false) {
    $blur: calc(#{if($enabled, 16px, 0)}); // * var(--shadowSize));
    $spread: calc(#{if($enabled, 8px, 0)}); // * var(--shadowSize));
    box-shadow: 0 0 $blur $spread lighten(saturate(rgba($accent-color, 0.8), 100%), 10%);
}
